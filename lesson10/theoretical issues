1. Распишите своё понимание полиморфизма и наследования. Своими словами.
   Представьте, что вас спрашивают на собеседованиии.

   Наследование - возможность объекта иметь потомков, которые имеют расширенный интерфейс.
   Пример: Супер класс - телефон,
           класс наследник - домашний телефон с функцией позвонить,
           класс наследник - мобильный телефон с функцией позвонить и отправить СМС.

   Полиморфизм – это свойство родственных объектов (т.е. объектов, имеющих одного общего родителя) 
   решать схожие по смыслу проблемы разными способами.

   Например, действие «бежать» свойственно большинству животных. 
   Однако каждое из них (лев, слон, крокодил, черепаха) выполняет это действие различным образом.

   Кратко смысл полиморфизма можно выразить фразой: «Один интерфейс, множество реализаций». 

2. Своими словами распишите отличие интерфейсов и абстрактных классов. 
   В чем отличие? 

   Абстрактный класс наследуется(etxends), а интерфейс реализуется (implements). 
   Вот и возникает разница между ними, что наследовать мы можем только один класс, а реализовать сколько угодно.

   Главное отличие состоит в том, что если мы наследуем абстрактный класс - то мы (в классе наследнике) можем реализовать методы
   которые нам необходимы. 
   Если мы определяем интерфейс - то у нас в классе должны быть реализованы все свойства и методы интерфейса.

   Когда лучше использовать одно, когда другое?

   Если классы относятся к единой системе классификации, то выбирается абстрактный класс. 
   Например:
   У нас есть система транспортных средств: легковой автомобиль,
                                            автобус,
                                            трамвай,
                                            поезд. 
   Поскольку данные объекты являются родственными, мы можем выделить у них общие признаки, то в данном случае можно
   использовать абстрактные классы.
  
   Но, предположим, что наша система транспорта не ограничивается вышеперечисленными транспортными средствами. 
   Например: Мы можем добавить самолеты, лодки. Возможно, также мы добавим лошадь - животное, которое может также
   выполнять роль транспортного средства. 
   Также можно добавить дирижабль. Вобщем получается довольно широкий круг объектов, которые связаны только тем,
   что являются транспортным средством и должны реализовать некоторый метод Move(), выполняющий перемещение.
   Так как объекты малосвязанные между собой, то для определения общего для всех них функционала лучше определить интерфейс. 
   Тем более некоторые из этих объектов могут существовать в рамках параллельных систем классификаций. 
   Например, лошадь может быть классом в структуре системы классов животного мира.
